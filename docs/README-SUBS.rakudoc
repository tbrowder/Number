=begin pod

=head1 Subroutines Exported by the C<:ALL> Tag

=begin table 
 bin2dec | bin2hex | bin2oct 
 dec2bin | dec2hex | dec2oct
 hex2bin | hex2dec | hex2oct
 oct2bin | oct2dec | oct2hex
 rebase  |         |  
=end table

=head3 sub bin2dec

=begin code
# Purpose: Convert a binary number (string) to a decimal number.
# Params : Binary number (string), desired length (optional).
# Returns: Decimal number (or string).
sub bin2dec(Str:D $bin where &binary,
            UInt $len = 0
            --> Cool) is export(:bin2dec) {...}
=end code

=head3 sub bin2hex
=begin code
# Purpose: Convert a binary number (string) to a hexadecimal number (string).
# Params : Binary number (string), desired length (optional), prefix (optional), 
#          lower-case (optional).
# Returns: Hexadecimal number (string).
sub bin2hex(Str:D $bin where &binary,
            UInt $len = 0,
            Bool :$prefix = False,
            Bool :$LC = False
            --> Str) is export(:bin2hex) {...}
=end code

=head3 sub bin2oct
=begin code
# Purpose: Convert a binary number (string) to an octal number (string).
# Params : Binary number (string), desired length (optional), prefix (optional).
# Returns: Octal number (string).
sub bin2oct($bin where &binary,
            UInt $len = 0,
            Bool :$prefix = False
            --> Str) is export(:bin2oct) {...}
=end code

=head3 sub dec2bin
=begin code
# Purpose: Convert a non-negative integer to a binary number (string).
# Params : Non-negative decimal number, desired length (optional), prefix (optional).
# Returns: Binary number (string).
sub dec2bin($dec where &decimal,
            UInt $len = 0,
            :$prefix = False
            --> Str) is export(:dec2bin) {...}
=end code

=head3 sub dec2hex
=begin code
# Purpose: Convert a non-negative integer to a hexadecimal number (string).
# Params : Non-negative decimal number, desired length (optional), prefix 
           (optional), lower-case (optional).
# Returns: Hexadecimal number (string).
sub dec2hex($dec where &decimal,
            UInt $len = 0,
            Bool :$prefix = False,
            Bool :$LC = False
            --> Str) is export(:dec2hex) {...}
=end code

=head3 sub dec2oct
=begin code
# Purpose: Convert a non-negative integer to an octal number (string).
# Params : Decimal number, desired length (optional), prefix (optional).
# Returns: Octal number (string).
sub dec2oct($dec where &decimal,
            UInt $len = 0,
            Bool :$prefix = False
            --> Cool) is export(:dec2oct) {...}
=end code

=head3 sub hex2bin
=begin code
# Purpose: Convert a non-negative hexadecimal number (string) to a binary string.
# Params : Hexadecimal number (string), desired length (optional), prefix (optional).
# Returns: Binary number (string).
sub hex2bin(Str:D $hex where &hexadecimal,
            UInt $len = 0,
            Bool :$prefix = False
            --> Str) is export(:hex2bin) {...}
=end code

=head3 sub hex2dec
=begin code
# Purpose: Convert a non-negative hexadecimal number (string) to a decimal number.
# Params : Hexadecimal number (string), desired length (optional).
# Returns: Decimal number (or string).
sub hex2dec(Str:D $hex where &hexadecimal,
            UInt $len = 0
            --> Cool) is export(:hex2dec) {...}
=end code

=head3 sub hex2oct
=begin code
# Purpose: Convert a hexadecimal number (string) to an octal number (string).
# Params : Hexadecimal number (string), desired length (optional), prefix (optional).
# Returns: Octal number (string).
sub hex2oct($hex where &hexadecimal, UInt $len = 0,
            Bool :$prefix = False
            --> Str) is export(:hex2oct) {...}
=end code

=head3 sub oct2bin
=begin code
- Purpose: Convert an octal number (string) to a binary number (string).
- Params : Octal number (string), desired length (optional), prefix (optional).
- Returns: Binary number (string).
sub oct2bin($oct where &octal, UInt $len = 0,
            Bool :$prefix = False
            --> Str) is export(:oct2bin) {...}
=end code

=head3 sub oct2dec
=begin code
# Purpose: Convert an octal number (string) to a decimal number.
# Params : Octal number (string), desired length (optional).
# Returns: Decimal number (or string).
sub oct2dec($oct where &octal, UInt $len = 0
            --> Cool) is export(:oct2dec) {...}
=end code

=head3 sub oct2hex
=begin code
# Purpose: Convert an octal number (string) to a hexadecimal number (string).
# Params : Octal number (string), desired length (optional), prefix (optional), 
#          lower-case (optional).
# Returns: Hexadecimal number (string).
sub oct2hex($oct where &octal, UInt $len = 0,
            Bool :$prefix = False,
            Bool :$LC = False
            --> Str) is export(:oct2hex) {...}
=end code

=head3 sub rebase
=begin code
# Purpose: Convert any number (integer or string) and base (2..62) to a 
#          number in another base (2..62).
# Params : Number (string), desired length (optional), prefix (optional), 
#          lower-case (optional).
# Returns: Desired number (decimal or string) in the desired base.
sub rebase($num-i,
           $base-i where &all-bases,
           $base-o where &all-bases,
           UInt $len = 0,
           Bool :$prefix = False,
           Bool :$LC = False
           --> Cool) is export(:baseM2baseN) {...}
=end code

=end pod
